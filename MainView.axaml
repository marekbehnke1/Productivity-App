<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:Controls="clr-namespace:LearnAvalonia.Components"
		xmlns:Converters="using:LearnAvalonia.Converters"
		xmlns:Models="clr-namespace:LearnAvalonia.Models"
		mc:Ignorable="d" d:DesignWidth="450" d:DesignHeight="800"
		Width="450"
		Height="800"
        x:Class="LearnAvalonia.MainView"
		x:Name="MainAppWindow"
		Classes="MainAppWindow"
		xmlns:vm="clr-namespace:LearnAvalonia.ViewModels"
		x:DataType="vm:MainViewModel"
        Title="LearnAvalonia"
		Background="{DynamicResource ResourceKey=PrimaryBackGround}"
		TransparencyLevelHint="AcrylicBlur"
		ExtendClientAreaToDecorationsHint="True"
		SystemDecorations="Full"
		CanResize="False"
		d:DataContext="{x:Static vm:DesignViewModel.Instance}"
		x:CompileBindings="False"
		>
	
	<Window.Resources>
		
		<Animation Duration="00:25:00" 
				   FillMode="Forward"
				   x:Key="TimerAnimationForward"
				   x:SetterTargetType="ProgressBar">
			<KeyFrame Cue="0%">
				<Setter Property="Value" Value="0"/>
				<Setter Property="Foreground" Value="Aqua"/>

			</KeyFrame>
			<KeyFrame Cue="100%">
				<Setter Property="Value" Value="100"/>
				<Setter Property="Foreground" Value="{DynamicResource TimerGradient}"/>

			</KeyFrame>
		</Animation>
		<Animation Duration="00:05:00" 
				   FillMode="Forward"
				   PlaybackDirection="Normal"
				   x:Key="TimerAnimationReverse"
				   x:SetterTargetType="ProgressBar">
			<KeyFrame Cue="0%">
				<Setter Property="Value" Value="100"/>
				<Setter Property="Foreground" Value="{DynamicResource TimerGradientReverse}"/>
			</KeyFrame>
			<KeyFrame Cue="100%">
				<Setter Property="Value" Value="0"/>
				<Setter Property="Foreground" Value="Aqua"/>
			</KeyFrame>
		</Animation>

		<Animation 
			Duration="0:0:0.2" 
			x:Key="WindowCollapse"
			x:SetterTargetType="Window">
			<KeyFrame Cue="0%">
				<Setter Property="Height" Value="800"/>
			</KeyFrame>
			<KeyFrame Cue="100%">
				<Setter Property="Height" Value="80"/>
			</KeyFrame>
		</Animation>
		
		<Animation 
			Duration="0:0:0.2" 
			x:Key="WindowExpand"
			x:SetterTargetType="Window">
			<KeyFrame Cue="0%">
				<Setter Property="Height" Value="80"/>
			</KeyFrame>
			<KeyFrame Cue="100%">
				<Setter Property="Height" Value="800"/>
			</KeyFrame>
		</Animation>
		
		<Converters:DropDownArrowConverter x:Key="DropDownArrowConverter"/>
		<Converters:StatusMessageColorConverter x:Key="StatusMessageColorConverter"/>
		<Converters:StatusBarOpacityConverter x:Key="StatusBarOpacityConverter"/>
		
	</Window.Resources>
		
	<Panel>
	<ExperimentalAcrylicBorder IsHitTestVisible="True">
		<ExperimentalAcrylicBorder.Material>
			<ExperimentalAcrylicMaterial
				BackgroundSource="Digger"
				TintColor="#000000"
				TintOpacity="0.6"
				MaterialOpacity="0.0" />
		</ExperimentalAcrylicBorder.Material>
	</ExperimentalAcrylicBorder>

		<Border BorderThickness="2" BorderBrush="#2c2c2c">
			
		<Grid Name="MainGrid" RowDefinitions="auto, auto, * , auto">
			<!--Top Bar-->
			<Grid Name="TopBar" Grid.Row="0" ColumnDefinitions="50, *" Margin="5" Height="25">
				<StackPanel Grid.Column="0" VerticalAlignment="Top" Orientation="Horizontal">
					<!--Collapse Button-->
					<Button Classes="CollapseButton" Click="CollapseApp" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="0">
						<Image Width="20" Source="{Binding !IsCollapsed, ElementName=MainAppWindow ,Converter={StaticResource DropDownArrowConverter}}"></Image>
					</Button>
	
				</StackPanel>
			</Grid>
			
			<!--Carousel Nav Bar-->
			<StackPanel x:Name="CarouselNavBar"
						Grid.Row="1"
						Height="30"
						Orientation="Horizontal"
						HorizontalAlignment="Center"
						Margin="0 0 0 10"
						Spacing="2">
				
				<!--Carousel Control Buttons-->
					<Button Classes="CarouselButton" Click="Previous" HorizontalAlignment="Left">&lt; </Button>
					<Button x:Name="AllTasksBtn" Classes="CarouselButton" Click="GotoAllTasks">All</Button>
					<Button x:Name="CritPrioTasksBtn" Classes="CarouselButton" Click="GotoCriticalTasks"><Image Source="{SvgImage /Assets/Images/priorityCritical.svg}"/></Button>
					<Button x:Name="HighPrioTasksBtn" Classes="CarouselButton" Click="GotoHighTasks">High</Button>
					<Button x:Name="MedPrioTasksBtn" Classes="CarouselButton" Click="GotoMediumTasks">Med</Button>
					<Button x:Name="LowPrioTasksBtn" Classes="CarouselButton" Click="GotoLowTasks">Low</Button>
					<Button x:Name="CompletedTasksBtn" Classes="CarouselButton" Click="GotoCompletedTasks"><Image Source="{SvgImage /Assets/Images/complete.svg}"/></Button>
					<Button Classes="CarouselButton" Click="Next" HorizontalAlignment="Right">&gt;</Button>
			</StackPanel>
			
				<!--Main Panel-->
			<Grid
				x:Name="MainPanel"
				Classes="MainPanel"
				Grid.Row="2"
				ColumnDefinitions="*, auto"
				MaxHeight="700"
				ClipToBounds="True"
				>

				<!--Main Notes Area-->

						<!--Carousel to hold the different filtered notes panels-->
						<Carousel Name="NotesCarousel"
								  SelectedIndex="{Binding CurrentPanelIndex}">
							<Carousel.PageTransition>
								<CompositePageTransition>
									<PageSlide Duration="0:0:0.3" Orientation="Horizontal"/>
								</CompositePageTransition>
							</Carousel.PageTransition>
							<Carousel.Items>
								
								<!-- All Tasks-->
								<ScrollViewer>
									<!--The area where our collection items will be displayed-->
									<ItemsControl ItemsSource="{Binding Tasks}">
										<ItemsControl.ItemsPanel>
											<!--Specifies a container for the items-->
											<ItemsPanelTemplate>
												<StackPanel ClipToBounds="True" Spacing="10"/>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
							
										<!--Describes the data and UI layouts-->
										<ItemsControl.ItemTemplate>
											<!--This is the data layout-->
											<DataTemplate DataType="{x:Type Models:TaskItem}">
												<!--This specifies a control to use for the ui layout-->
												<Controls:ListItem
													Title="{Binding Title}"
													Description="{Binding Description}"
													DueDate="{Binding DueDate}"
													TaskPriority="{Binding TaskPriority}"
													IsCollapsed="{Binding IsCollapsed}"/>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</ScrollViewer>
								
								<!--Critical Prio Tasks-->
								<ScrollViewer>
									<!--The area where our collection items will be displayed-->
									<ItemsControl ItemsSource="{Binding CriticalPrioTasks}">
										<ItemsControl.ItemsPanel>
											<!--Specifies a container for the items-->
											<ItemsPanelTemplate>
												<StackPanel ClipToBounds="True" Spacing="10"/>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
							
										<!--Describes the data and UI layouts-->
										<ItemsControl.ItemTemplate>
											<!--This is the data layout-->
											<DataTemplate DataType="{x:Type Models:TaskItem}">
												<!--This specifies a control to use for the ui layout-->
												<Controls:ListItem
													Title="{Binding Title}"
													Description="{Binding Description}"
													DueDate="{Binding DueDate}"
													TaskPriority="{Binding TaskPriority}"
													IsCollapsed="{Binding IsCollapsed}"/>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</ScrollViewer>
								
								<!--High Prio Tasks-->
								<ScrollViewer>
									<!--The area where our collection items will be displayed-->
									<ItemsControl ItemsSource="{Binding HighPrioTasks}">
										<ItemsControl.ItemsPanel>
											<!--Specifies a container for the items-->
											<ItemsPanelTemplate>
												<StackPanel ClipToBounds="True" Spacing="10"/>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
							
										<!--Describes the data and UI layouts-->
										<ItemsControl.ItemTemplate>
											<!--This is the data layout-->
											<DataTemplate DataType="{x:Type Models:TaskItem}">
												<!--This specifies a control to use for the ui layout-->
												<Controls:ListItem
													Title="{Binding Title}"
													Description="{Binding Description}"
													DueDate="{Binding DueDate}"
													TaskPriority="{Binding TaskPriority}"
													IsCollapsed="{Binding IsCollapsed}"/>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</ScrollViewer>
								
								<!--Medium Prio tasks-->
								<ScrollViewer>
									<!--The area where our collection items will be displayed-->
									<ItemsControl ItemsSource="{Binding MediumPrioTasks}">
										<ItemsControl.ItemsPanel>
											<!--Specifies a container for the items-->
											<ItemsPanelTemplate>
												<StackPanel ClipToBounds="True" Spacing="10"/>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
							
										<!--Describes the data and UI layouts-->
										<ItemsControl.ItemTemplate>
											<!--This is the data layout-->
											<DataTemplate DataType="{x:Type Models:TaskItem}">
												<!--This specifies a control to use for the ui layout-->
												<Controls:ListItem
													Title="{Binding Title}"
													Description="{Binding Description}"
													DueDate="{Binding DueDate}"
													TaskPriority="{Binding TaskPriority}"
													IsCollapsed="{Binding IsCollapsed}"/>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</ScrollViewer>
								
								<!--Low Prio tasks-->
								<ScrollViewer>
									<!--The area where our collection items will be displayed-->
									<ItemsControl ItemsSource="{Binding LowPrioTasks}">
										<ItemsControl.ItemsPanel>
											<!--Specifies a container for the items-->
											<ItemsPanelTemplate>
												<StackPanel ClipToBounds="True" Spacing="10"/>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
							
										<!--Describes the data and UI layouts-->
										<ItemsControl.ItemTemplate>
											<!--This is the data layout-->
											<DataTemplate DataType="{x:Type Models:TaskItem}">
												<!--This specifies a control to use for the ui layout-->
												<Controls:ListItem
													Title="{Binding Title}"
													Description="{Binding Description}"
													DueDate="{Binding DueDate}"
													TaskPriority="{Binding TaskPriority}"
													IsCollapsed="{Binding IsCollapsed}"/>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</ScrollViewer>
								
								<!--Completed tasks-->
								<ScrollViewer>
									<!--The area where our collection items will be displayed-->
									<ItemsControl ItemsSource="{Binding CompletedTasks}">
										<ItemsControl.ItemsPanel>
											<!--Specifies a container for the items-->
											<ItemsPanelTemplate>
												<StackPanel ClipToBounds="True" Spacing="10"/>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
							
										<!--Describes the data and UI layouts-->
										<ItemsControl.ItemTemplate>
											<!--This is the data layout-->
											<DataTemplate DataType="{x:Type Models:TaskItem}">
												<!--This specifies a control to use for the ui layout-->
												<Controls:ListItem
													Title="{Binding Title}"
													Description="{Binding Description}"
													DueDate="{Binding DueDate}"
													TaskPriority="{Binding TaskPriority}"
													IsCollapsed="{Binding IsCollapsed}"/>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</ScrollViewer>
							
							</Carousel.Items>
						</Carousel>

				<!--Right Side Bar-->
				<Grid RowDefinitions="*, auto" Grid.Column="1">
					
					<StackPanel Grid.Row="0" MaxWidth="30" Orientation="Vertical">
						<Button Classes="CreateNote" Click="CreateNote" Padding="5">
							<Image Height="20" Width="20" Source="{SvgImage /Assets/Images/write.svg}"/>
						</Button>
						<Button Classes="SettingsButton" Click="" Padding="5">
							<Image Height="20" Width="20" Source="{SvgImage /Assets/Images/settings.svg}"/>
						</Button>
					</StackPanel>

					<!--Loading Icon -->
					<Image Grid.Row="1"
							Height="20" 
							Width="20" 
							Source="{SvgImage /Assets/Images/loading.svg}" 
							IsVisible="{Binding IsLoading}"
							Classes="Spinning"/>
				</Grid>				

			</Grid>
			<!--Status message bar-->
			<StackPanel x:Name="StatusPanel"
						Grid.Row="2"
						IsVisible="{Binding HasMessage}"
						Background="Transparent"
						VerticalAlignment="Bottom"
						Opacity="{Binding HasMessage, Converter={StaticResource StatusBarOpacityConverter}}">
				
				<!--Opacity Animation-->
				<StackPanel.Transitions>
					<Transitions>
						<DoubleTransition Property="Opacity" Duration="0:0:0.2"/>
					</Transitions>
				</StackPanel.Transitions>
						
				<Border BorderThickness="2" 
						BorderBrush="{Binding IsSuccess, Converter={StaticResource StatusMessageColorConverter}}" 
						CornerRadius="5" 
						Width="204">
					
					<TextBlock x:Name="StatusMessage"
							   Foreground="White"
							   Background="rgba(69, 69, 69, 0.9)"
							   TextAlignment="Center"
							   Width="200"
							   Height="25"
							   Padding="3"
							   FontSize="15"
							   Text="{Binding StatusMessage}"/>
				</Border>				
			</StackPanel>
			
			<!--Bottom Bar-->
			<Grid 
				Name="BottomBar" 
				Grid.Row="4" 
				Margin="0 0 0 5">
				<ProgressBar Height="30" x:Name="TimerBar"/>
				<Grid ColumnDefinitions="100, * , 100">
					<Button Click="Timer_Start" 
							x:Name="TimerButton" 
							Grid.Column="0" 
							HorizontalAlignment="Center" 
							VerticalAlignment="Center">
						Start
					</Button>
					
					<!--Timer countdown text-->
					<TextBlock 
						x:Name="TimerText" 
						Grid.Column="2" 
						HorizontalAlignment="Center" 
						VerticalAlignment="Center"/>
				</Grid>
			</Grid>
		</Grid>
		</Border>
	
	</Panel>

</Window>
