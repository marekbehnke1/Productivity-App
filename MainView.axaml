<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:Controls="clr-namespace:LearnAvalonia.Components"
		xmlns:Converters="using:LearnAvalonia.Converters"
		xmlns:Models="clr-namespace:LearnAvalonia.Models"
		mc:Ignorable="d" d:DesignWidth="450" d:DesignHeight="300"
		Width="450"
		Height="{Binding CurrentViewModel.WindowHeight, FallbackValue=800}"
        x:Class="LearnAvalonia.MainView"
		x:Name="MainAppWindow"
		Classes="MainAppWindow"
		xmlns:vm="clr-namespace:LearnAvalonia.ViewModels"
		x:DataType="vm:NavigationViewModel"
        Title="LearnAvalonia"
		Background="{DynamicResource ResourceKey=PrimaryBackGround}"
		TransparencyLevelHint="AcrylicBlur"
		ExtendClientAreaToDecorationsHint="True"
		SystemDecorations="Full"
		CanResize="False"
		d:DataContext="{x:Static vm:DesignViewModel.Instance}"
		x:CompileBindings="False"
		>
	
	<Window.Resources>
		
		<Animation Duration="00:25:00" 
				   FillMode="Forward"
				   x:Key="TimerAnimationForward"
				   x:SetterTargetType="ProgressBar">
			<KeyFrame Cue="0%">
				<Setter Property="Value" Value="0"/>
				<Setter Property="Foreground" Value="Aqua"/>

			</KeyFrame>
			<KeyFrame Cue="100%">
				<Setter Property="Value" Value="100"/>
				<Setter Property="Foreground" Value="{DynamicResource TimerGradient}"/>

			</KeyFrame>
		</Animation>
		<Animation Duration="00:05:00" 
				   FillMode="Forward"
				   PlaybackDirection="Normal"
				   x:Key="TimerAnimationReverse"
				   x:SetterTargetType="ProgressBar">
			<KeyFrame Cue="0%">
				<Setter Property="Value" Value="100"/>
				<Setter Property="Foreground" Value="{DynamicResource TimerGradientReverse}"/>
			</KeyFrame>
			<KeyFrame Cue="100%">
				<Setter Property="Value" Value="0"/>
				<Setter Property="Foreground" Value="Aqua"/>
			</KeyFrame>
		</Animation>

		<Animation 
			Duration="0:0:0.2" 
			x:Key="WindowCollapse"
			x:SetterTargetType="Window">
			<KeyFrame Cue="0%">
				<Setter Property="Height" Value="800"/>
			</KeyFrame>
			<KeyFrame Cue="100%">
				<Setter Property="Height" Value="80"/>
			</KeyFrame>
		</Animation>
		
		<Animation 
			Duration="0:0:0.2" 
			x:Key="WindowExpand"
			x:SetterTargetType="Window">
			<KeyFrame Cue="0%">
				<Setter Property="Height" Value="80"/>
			</KeyFrame>
			<KeyFrame Cue="100%">
				<Setter Property="Height" Value="800"/>
			</KeyFrame>
		</Animation>
		
		<Converters:DropDownArrowConverter x:Key="DropDownArrowConverter"/>
		<Converters:StatusMessageColorConverter x:Key="StatusMessageColorConverter"/>
		<Converters:StatusBarOpacityConverter x:Key="StatusBarOpacityConverter"/>
		
	</Window.Resources>
		
	<ContentControl Content="{Binding CurrentViewModel}">
		<ContentControl.DataTemplates>
			
			<!--Login View Model-->
			<DataTemplate DataType="{x:Type vm:LoginViewModel}">
				
					<!--Main Login Form-->
					<Grid RowDefinitions="*, 100">
						<Grid Grid.Row="0" 
							  Margin="0 50 0 0">

							<StackPanel Spacing="10">
								<TextBox Watermark="Email Address"
										 Text="{Binding Email}"
										 IsEnabled="{Binding !IsLoading}"
										 Width="250" />

								<TextBox Watermark="Password"
										 PasswordChar="●"
										 Text="{Binding Password}"
										 IsEnabled="{Binding !IsLoading}"
										 Width="250"/>

								<Button Content="Log in"
										Command="{Binding LoginCommand}"
										IsEnabled="{Binding !IsLoading}"
										HorizontalAlignment="Center" />

								<Image Height="20"
										Width="20"
										Source="{SvgImage /Assets/Images/loading.svg}"
										IsVisible="{Binding IsLoading}"
										Classes="Spinning"/>

								<TextBlock IsVisible="{Binding HasError}"
											Height="40"
											TextWrapping="Wrap"
											Text="{Binding ErrorMessage}"
											TextAlignment="Center"
										   VerticalAlignment="Top"/>
								
							</StackPanel>
							
						</Grid>
						
						<!--Register Link-->
						<Grid Grid.Row="1" 
							  Margin="0 0 0 20">
							
							<TextBlock Text="Don't have an account yet?"
									   Margin="0 20 0 0"
									   HorizontalAlignment="Center"
									   />

							<Button Content="Register"
									HorizontalAlignment="Center"
									VerticalAlignment="Bottom"
									Command="{Binding NavigateToRegisterViewCommand}"/>
						</Grid>
					</Grid>
			
			</DataTemplate>
			<!--Register View Model-->
			<DataTemplate DataType="{x:Type vm:RegisterViewModel}">

				<Grid RowDefinitions="*, 80">
					
					<Grid Grid.Row="0">
						
						<StackPanel Width="250"
									Spacing="15"
									Margin="0 50 0 0">
							
							<TextBox Watermark="First Name"
									 Text="{Binding FirstName}"
									 TextAlignment="Center"/>
							
							<TextBox Watermark="Last Name"
									 Text="{Binding LastName}"
									 TextAlignment="Center"/>
							
							<TextBox Watermark="Email Address"
									 Text="{Binding Email}"
									 TextAlignment="Center"/>
							
							<TextBox Watermark="Password"
									 PasswordChar="●"
									 Text="{Binding Password}"
									 TextAlignment="Center"/>
							
							<TextBox Watermark="Confirm Password"
									 PasswordChar="●"
									 Text="{Binding PasswordConfirm}"
									 TextAlignment="Center"/>
							
							<Button Content="Register"
									HorizontalAlignment="Center"
									Command="{Binding RegisterCommand}"/>

							<Image Height="20"
										Width="20"
										Source="{SvgImage /Assets/Images/loading.svg}"
										IsVisible="{Binding IsLoading}"
										Classes="Spinning"/>
							
						</StackPanel>
						
					</Grid>
					
					<Grid Grid.Row="1" Background="">

						<TextBlock IsVisible="{Binding HasError}"
									Height="40"
									TextWrapping="Wrap"
									Text="{Binding ErrorMessage}"
									TextAlignment="Center"
								   VerticalAlignment="Top"/>
						
						<Button Content="Login"
								Margin="0 0 0 10"
								HorizontalAlignment="Center"
								VerticalAlignment="Bottom"
								Command="{Binding NavigateToLoginViewCommand}"/>
					</Grid>
					
				</Grid>
			
			</DataTemplate>
			<!--Main View Model-->
			<DataTemplate DataType="{x:Type vm:MainViewModel}">
				<Panel>
			<ExperimentalAcrylicBorder IsHitTestVisible="True">
				<ExperimentalAcrylicBorder.Material>
					<ExperimentalAcrylicMaterial
						BackgroundSource="Digger"
						TintColor="#000000"
						TintOpacity="0.6"
						MaterialOpacity="0.0" />
				</ExperimentalAcrylicBorder.Material>
			</ExperimentalAcrylicBorder>

				<Border BorderThickness="2" BorderBrush="#2c2c2c">
			
				<Grid Name="MainGrid" RowDefinitions="auto, auto, *, auto">
					<!--Top Bar-->
					<Grid Name="TopBar" Grid.Row="0" ColumnDefinitions="50, *" Margin="5" Height="25">
						<StackPanel Grid.Column="0" VerticalAlignment="Top" Orientation="Horizontal" Spacing="30">
							<!--Collapse Button-->
							<Button Classes="CollapseButton" Command="{Binding ToggleCollapseCommand}" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="0">
								<Image Width="20" Source="{Binding !IsCollapsed, ElementName=MainAppWindow ,Converter={StaticResource DropDownArrowConverter}}"></Image>
							</Button>
						</StackPanel>
					</Grid>
			
						<Grid Grid.Row="1" ColumnDefinitions="auto, *">
							<Grid Grid.Column="0">
								<!--Project Nav Bar-->
								<StackPanel x:Name="ProjectNavBar"
											Height="30"
											Orientation="Horizontal"
											HorizontalAlignment="Left"
											Margin="0 0 0 10"
											Spacing="5">

									<!--Filter Menu-->
									<Menu CornerRadius="5"> 
										<MenuItem CornerRadius="10" Padding="5 0" Margin="5 0 0 0">
											<MenuItem.Header>
												<Image Width="25" Height="25" Source="{SvgImage /Assets/Images/filtericon.svg}"/>
											</MenuItem.Header>
											<MenuItem Header="All Tasks" Command="{Binding SetNoFilterCommand}"/>
											<MenuItem Header="All Uncompleted" Command="{Binding SetUncompletedFilterCommand}"/>
											<MenuItem Header="Critical" Command="{Binding SetCriticalFilterCommand}"/>
											<MenuItem Header="High" Command="{Binding SetHighFilterCommand}"/>
											<MenuItem Header="Medium" Command="{Binding SetMediumFilterCommand}"/>
											<MenuItem Header="Low" Command="{Binding SetLowFilterCommand}"/>
											<MenuItem Header="Complete" Command="{Binding SetCompletedFilterCommand}"/>
										</MenuItem>
									</Menu>
				
									<!--All Projects Button-->
									<Button Content="All" Classes="ProjectButton" Command="{Binding SwitchToAllCommand}"/>
								</StackPanel>
							</Grid>
					
							<Grid Grid.Column="1" VerticalAlignment="Top">
							
								<ScrollViewer HorizontalScrollBarVisibility="Auto" 
											  VerticalScrollBarVisibility="Disabled"
											  Margin="5 0 0 0">
					
									<!--List of project buttons-->
									<ItemsControl ItemsSource="{Binding Projects}">
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel ClipToBounds="False" Orientation="Horizontal" Spacing="5"/>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>

										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<!--This sets each button to pass itself into the switch proj comamnd-->
												<!--TODO: get the project buttons working-->
												<Button Classes="ProjectButton" 
														Content="{Binding Name}"
														Command="{Binding DataContext.CurrentViewModel.SwitchProjectCommand, RelativeSource={RelativeSource AncestorType=Window}}"
														CommandParameter="{Binding}"
														/>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</ScrollViewer>		
							</Grid>
						</Grid>
				
			
					<!--Main Panel-->
					<Grid
						x:Name="MainPanel"
						Classes="MainPanel"
						Grid.Row="2"
						ColumnDefinitions="*, auto"
						MaxHeight="700"
						ClipToBounds="True"
						>
						<!--Project Header-->
						<Grid RowDefinitions="auto, *">
							<Grid Grid.Row="0"
								  IsVisible="{Binding SelectedProject, Converter={x:Static ObjectConverters.IsNotNull}}">
								<Controls:ProjectHeader DataContext="{Binding SelectedProject}"
														Margin="0 10 0 10"/>
							</Grid>
							<Grid Grid.Row="1">
								<!--Main Notes Area-->
								<ScrollViewer>
									<StackPanel>
										<!--The area where our collection items will be displayed-->
										<ItemsControl ItemsSource="{Binding CurrentFilteredTasks}">
											<ItemsControl.ItemsPanel>
												<!--Specifies a container for the items-->
												<ItemsPanelTemplate>
													<StackPanel ClipToBounds="True" Spacing="10"/>
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
							
											<!--Describes the data and UI layouts-->
											<ItemsControl.ItemTemplate>
												<!--This is the data layout-->
												<DataTemplate DataType="{x:Type Models:TaskItem}">
													<!--This specifies a control to use for the ui layout-->
													<Controls:ListItem
														Title="{Binding Title}"
														Description="{Binding Description}"
														DueDate="{Binding DueDate}"
														TaskPriority="{Binding TaskPriority}"
														IsCollapsed="{Binding IsCollapsed}"/>
												</DataTemplate>
											</ItemsControl.ItemTemplate>
										</ItemsControl>
									</StackPanel>									
								</ScrollViewer>
						
							</Grid>
					
						</Grid>

						<!--Right Side Bar-->
						<Grid RowDefinitions="*, auto" Grid.Column="1">
							
							<!--Add Project Button-->
							<StackPanel Grid.Row="0" MaxWidth="30" Orientation="Vertical">
								<Button Classes="CreateNote" Command="{Binding AddNewProjectCommand}" Padding="5">
									<Image Height="20" Width="20" Source="{SvgImage /Assets/Images/addproject.svg}"/>
								</Button>
								<!--Add Task Button-->
								<Button Classes="CreateNote" Command="{Binding AddNewTaskCommand}" Padding="5">
									<Image Height="20" Width="20" Source="{SvgImage /Assets/Images/addnote.svg}"/>
								</Button>
								<!--Setting Menu-->
								<Button Classes="SettingsButton" Click="" Padding="5">
									<Image Height="20" Width="20" Source="{SvgImage /Assets/Images/settings.svg}"/>
								</Button>
							</StackPanel>

							<!--Loading Icon -->
							<Image Grid.Row="1"
									Height="20" 
									Width="20" 
									Source="{SvgImage /Assets/Images/loading.svg}" 
									IsVisible="{Binding IsLoading}"
									Classes="Spinning"/>
						  
						</Grid>				

					</Grid>
					<!--Status message bar-->
					<StackPanel x:Name="StatusPanel"
								Grid.Row="2"
								IsVisible="{Binding HasMessage}"
								Background="Transparent"
								VerticalAlignment="Bottom"
								Opacity="{Binding HasMessage, Converter={StaticResource StatusBarOpacityConverter}}">
				
						<!--Opacity Animation-->
						<StackPanel.Transitions>
							<Transitions>
								<DoubleTransition Property="Opacity" Duration="0:0:0.2"/>
							</Transitions>
						</StackPanel.Transitions>
						
						<!--Status Message-->
						<Border BorderThickness="2"
								BorderBrush="{Binding IsSuccess, Converter={StaticResource StatusMessageColorConverter}}" 
								CornerRadius="5"
								Width="205">
						<TextBlock x:Name="StatusMessage"
									Foreground="White"
									Background="rgba(69, 69, 69, 0.9)"
									TextAlignment="Center"
									Width="200"
									Height="25"
									Padding="3"
									FontSize="15"
									Text="{Binding StatusMessage}"/>
						</Border>
					</StackPanel>
			
					<!--Bottom Bar-->
					<Grid 
						Name="BottomBar" 
						Grid.Row="4" 
						Margin="0 0 0 5">
						<ProgressBar Height="30" x:Name="TimerBar"/>
						<Grid ColumnDefinitions="100, * , 100">
							<!--TODO - Think this needs the animation to work properly-->
							<Button Command="{Binding StartTimerCommand}" 
									x:Name="TimerButton" 
									Grid.Column="0" 
									HorizontalAlignment="Center" 
									VerticalAlignment="Center">
								Start
							</Button>
					
							<!--Timer countdown text-->
							<TextBlock 
								x:Name="TimerText" 
								Grid.Column="2" 
								HorizontalAlignment="Center" 
								VerticalAlignment="Center"/>
						</Grid>
					</Grid>
				</Grid>
				</Border>
	</Panel>
			
			</DataTemplate>
		</ContentControl.DataTemplates>
	</ContentControl>
		
	

</Window>
